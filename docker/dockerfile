# Other distros may not be supported with all of the packages listed below
ARG ROS_DISTRO=humble 

FROM ros:${ROS_DISTRO}

# Install dependent packages
RUN apt-get update && apt-get install -y nano \
    ros-${ROS_DISTRO}-gtsam \
    ros-${ROS_DISTRO}-perception-pcl \
    ros-${ROS_DISTRO}-pcl-msgs \
    ros-${ROS_DISTRO}-vision-opencv \
    ros-${ROS_DISTRO}-xacro \
    ros-${ROS_DISTRO}-rviz2 \
    ros-${ROS_DISTRO}-geodesy \
    libgeographic-dev \
    libpcap-dev \
    cmake \
    vim \
    tmux \
    python3-pip \
    && pip3 install --upgrade pip \
    && rm -rf /var/lib/apt/lists/*

# Install Segmentation Libraries
RUN python3 -m pip install numpy matplotlib opencv-python open3d ouster-sdk 

# Install Ouster
WORKDIR /root/ros2_ws/src
RUN git clone -b ros2 --recurse-submodules https://github.com/ouster-lidar/ouster-ros.git

# Build Ouster
RUN CPUS=$(nproc) && \
    JOBS=$((CPUS / 2)) && \
    if [ "$JOBS" -lt 1 ]; then JOBS=1; fi && \
    LOAD_LIMIT=$CPUS && \
    export MAKEFLAGS="-j$JOBS -l$LOAD_LIMIT" && \
    cd .. && . /opt/ros/${ROS_DISTRO}/setup.sh && \
    colcon build \
    --executor sequential \
    --symlink-install \
    --cmake-args -DCMAKE_BUILD_TYPE=Release \
    --packages-select ouster_sensor_msgs ouster_ros

# Install and build LIO-SAM
# Install Livox SDK (Needed for Fast LIO-SAM)
RUN git clone https://github.com/Livox-SDK/Livox-SDK2.git /Livox-SDK2 && cd /Livox-SDK2 && mkdir build && cd build && cmake .. && make -j && make install

# Install ros2 driver for Livox SDK
RUN git clone https://github.com/Livox-SDK/livox_ros_driver2.git /ws_livox/src/livox_ros_driver2 && . /opt/ros/${ROS_DISTRO}/setup.sh && \
    cd /ws_livox/src/livox_ros_driver2 && ./build.sh ${ROS_DISTRO} && echo "source /ws_livox/install/setup.bash" >> ~/.bashrc

# RUN git clone -b ros2 --recurse-submodules https://github.com/TixiaoShan/LIO-SAM.git
COPY ./LIO-SAM ./LIO-SAM
RUN CPUS=$(nproc) && \
    JOBS=$((CPUS / 2)) && \
    if [ "$JOBS" -lt 1 ]; then JOBS=1; fi && \
    LOAD_LIMIT=$CPUS && \
    export MAKEFLAGS="-j$JOBS -l$LOAD_LIMIT" && \
    cd .. && . /opt/ros/${ROS_DISTRO}/setup.sh && \
    . /ws_livox/install/setup.sh && \
    colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release --packages-select lio_sam

# Install and build LIO-RF 
# RUN git clone -b liorf-ros2 --recurse-submodules https://github.com/Y-Ride/liorf.git
COPY ./liorf ./liorf
RUN CPUS=$(nproc) && \
    JOBS=$((CPUS / 2)) && \
    if [ "$JOBS" -lt 1 ]; then JOBS=1; fi && \
    LOAD_LIMIT=$JOBS && \
    export MAKEFLAGS="-j$JOBS -l$LOAD_LIMIT" && \
    cd .. && . /opt/ros/${ROS_DISTRO}/setup.sh && \
    colcon build \
    --symlink-install \
    --cmake-args \
    -DCMAKE_BUILD_TYPE=Release \
    --packages-select liorf

WORKDIR /root/ros2_ws

RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ~/.bashrc && \
    echo "if [ -f /root/ros2_ws/install/setup.bash ]; then" >> ~/.bashrc && \
    echo "  source /root/ros2_ws/install/setup.bash" >> ~/.bashrc && \
    echo "fi" >> ~/.bashrc

COPY docker/ros_entrypoint.sh /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh
ENTRYPOINT [ "/ros_entrypoint.sh" ]
CMD ["bash"]
 
